// Copyright 2025 The Grafeas Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.13.0
// source: secret.proto

package secret_go_proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	common_go_proto "github.com/grafeas/grafeas/proto/v1beta1/common_go_proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Kind of secret.
type SecretKind int32

const (
	// Unspecified
	SecretKind_SECRET_KIND_UNSPECIFIED SecretKind = 0
	// The secret kind is unknown.
	SecretKind_SECRET_KIND_UNKNOWN SecretKind = 1
	// A GCP service account key per:
	// https://cloud.google.com/iam/docs/creating-managing-service-account-keys
	SecretKind_SECRET_KIND_GCP_SERVICE_ACCOUNT_KEY SecretKind = 2
)

// Enum value maps for SecretKind.
var (
	SecretKind_name = map[int32]string{
		0: "SECRET_KIND_UNSPECIFIED",
		1: "SECRET_KIND_UNKNOWN",
		2: "SECRET_KIND_GCP_SERVICE_ACCOUNT_KEY",
	}
	SecretKind_value = map[string]int32{
		"SECRET_KIND_UNSPECIFIED":             0,
		"SECRET_KIND_UNKNOWN":                 1,
		"SECRET_KIND_GCP_SERVICE_ACCOUNT_KEY": 2,
	}
)

func (x SecretKind) Enum() *SecretKind {
	p := new(SecretKind)
	*p = x
	return p
}

func (x SecretKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretKind) Descriptor() protoreflect.EnumDescriptor {
	return file_secret_proto_enumTypes[0].Descriptor()
}

func (SecretKind) Type() protoreflect.EnumType {
	return &file_secret_proto_enumTypes[0]
}

func (x SecretKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretKind.Descriptor instead.
func (SecretKind) EnumDescriptor() ([]byte, []int) {
	return file_secret_proto_rawDescGZIP(), []int{0}
}

// The status of the secret.
type SecretStatus_Status int32

const (
	// Unspecified
	SecretStatus_STATUS_UNSPECIFIED SecretStatus_Status = 0
	// The status of the secret is unknown.
	SecretStatus_UNKNOWN SecretStatus_Status = 1
	// The secret is valid.
	SecretStatus_VALID SecretStatus_Status = 2
	// The secret is invalid.
	SecretStatus_INVALID SecretStatus_Status = 3
)

// Enum value maps for SecretStatus_Status.
var (
	SecretStatus_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "UNKNOWN",
		2: "VALID",
		3: "INVALID",
	}
	SecretStatus_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"UNKNOWN":            1,
		"VALID":              2,
		"INVALID":            3,
	}
)

func (x SecretStatus_Status) Enum() *SecretStatus_Status {
	p := new(SecretStatus_Status)
	*p = x
	return p
}

func (x SecretStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_secret_proto_enumTypes[1].Descriptor()
}

func (SecretStatus_Status) Type() protoreflect.EnumType {
	return &file_secret_proto_enumTypes[1]
}

func (x SecretStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretStatus_Status.Descriptor instead.
func (SecretStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_secret_proto_rawDescGZIP(), []int{3, 0}
}

// The note representing a secret.
type SecretNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SecretNote) Reset() {
	*x = SecretNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secret_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretNote) ProtoMessage() {}

func (x *SecretNote) ProtoReflect() protoreflect.Message {
	mi := &file_secret_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretNote.ProtoReflect.Descriptor instead.
func (*SecretNote) Descriptor() ([]byte, []int) {
	return file_secret_proto_rawDescGZIP(), []int{0}
}

// The occurrence provides details of a secret.
type SecretOccurrence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of secret.
	Kind SecretKind `protobuf:"varint,1,opt,name=kind,proto3,enum=grafeas.v1beta1.secret.SecretKind" json:"kind,omitempty"`
	// Locations where the secret is detected.
	Locations []*SecretLocation `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"`
	// Status of the secret.
	Statuses []*SecretStatus `protobuf:"bytes,3,rep,name=statuses,proto3" json:"statuses,omitempty"`
}

func (x *SecretOccurrence) Reset() {
	*x = SecretOccurrence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secret_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretOccurrence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretOccurrence) ProtoMessage() {}

func (x *SecretOccurrence) ProtoReflect() protoreflect.Message {
	mi := &file_secret_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretOccurrence.ProtoReflect.Descriptor instead.
func (*SecretOccurrence) Descriptor() ([]byte, []int) {
	return file_secret_proto_rawDescGZIP(), []int{1}
}

func (x *SecretOccurrence) GetKind() SecretKind {
	if x != nil {
		return x.Kind
	}
	return SecretKind_SECRET_KIND_UNSPECIFIED
}

func (x *SecretOccurrence) GetLocations() []*SecretLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *SecretOccurrence) GetStatuses() []*SecretStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

// The location of the secret.
type SecretLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The detailed location of the secret.
	//
	// Types that are assignable to Location:
	//
	//	*SecretLocation_FileLocation
	Location isSecretLocation_Location `protobuf_oneof:"location"`
}

func (x *SecretLocation) Reset() {
	*x = SecretLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secret_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretLocation) ProtoMessage() {}

func (x *SecretLocation) ProtoReflect() protoreflect.Message {
	mi := &file_secret_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretLocation.ProtoReflect.Descriptor instead.
func (*SecretLocation) Descriptor() ([]byte, []int) {
	return file_secret_proto_rawDescGZIP(), []int{2}
}

func (m *SecretLocation) GetLocation() isSecretLocation_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *SecretLocation) GetFileLocation() *common_go_proto.FileLocation {
	if x, ok := x.GetLocation().(*SecretLocation_FileLocation); ok {
		return x.FileLocation
	}
	return nil
}

type isSecretLocation_Location interface {
	isSecretLocation_Location()
}

type SecretLocation_FileLocation struct {
	// The secret is found from a file.
	FileLocation *common_go_proto.FileLocation `protobuf:"bytes,1,opt,name=file_location,json=fileLocation,proto3,oneof"`
}

func (*SecretLocation_FileLocation) isSecretLocation_Location() {}

// The status of the secret with a timestamp.
type SecretStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The status of the secret.
	Status SecretStatus_Status `protobuf:"varint,1,opt,name=status,proto3,enum=grafeas.v1beta1.secret.SecretStatus_Status" json:"status,omitempty"`
	// The time the secret status was last updated.
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Optional message about the status code.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SecretStatus) Reset() {
	*x = SecretStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_secret_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretStatus) ProtoMessage() {}

func (x *SecretStatus) ProtoReflect() protoreflect.Message {
	mi := &file_secret_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretStatus.ProtoReflect.Descriptor instead.
func (*SecretStatus) Descriptor() ([]byte, []int) {
	return file_secret_proto_rawDescGZIP(), []int{3}
}

func (x *SecretStatus) GetStatus() SecretStatus_Status {
	if x != nil {
		return x.Status
	}
	return SecretStatus_STATUS_UNSPECIFIED
}

func (x *SecretStatus) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *SecretStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_secret_proto protoreflect.FileDescriptor

var file_secret_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x67, 0x72, 0x61, 0x66, 0x65, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x65, 0x22, 0xe1, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4f, 0x63, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x65, 0x61, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x65, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x45, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x65, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x65, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x02, 0x0a, 0x0c, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x67, 0x72,
	0x61, 0x66, 0x65, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x2a, 0x6b, 0x0a,
	0x0a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x17, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x43, 0x52,
	0x45, 0x54, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x01, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x4b, 0x49, 0x4e, 0x44,
	0x5f, 0x47, 0x43, 0x50, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x02, 0x42, 0x5d, 0x0a, 0x19, 0x69, 0x6f,
	0x2e, 0x67, 0x72, 0x61, 0x66, 0x65, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x01, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x65, 0x61, 0x73, 0x2f, 0x67, 0x72,
	0x61, 0x66, 0x65, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0xa2, 0x02, 0x03, 0x47, 0x52, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_secret_proto_rawDescOnce sync.Once
	file_secret_proto_rawDescData = file_secret_proto_rawDesc
)

func file_secret_proto_rawDescGZIP() []byte {
	file_secret_proto_rawDescOnce.Do(func() {
		file_secret_proto_rawDescData = protoimpl.X.CompressGZIP(file_secret_proto_rawDescData)
	})
	return file_secret_proto_rawDescData
}

var file_secret_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_secret_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_secret_proto_goTypes = []interface{}{
	(SecretKind)(0),                      // 0: grafeas.v1beta1.secret.SecretKind
	(SecretStatus_Status)(0),             // 1: grafeas.v1beta1.secret.SecretStatus.Status
	(*SecretNote)(nil),                   // 2: grafeas.v1beta1.secret.SecretNote
	(*SecretOccurrence)(nil),             // 3: grafeas.v1beta1.secret.SecretOccurrence
	(*SecretLocation)(nil),               // 4: grafeas.v1beta1.secret.SecretLocation
	(*SecretStatus)(nil),                 // 5: grafeas.v1beta1.secret.SecretStatus
	(*common_go_proto.FileLocation)(nil), // 6: grafeas.v1beta1.FileLocation
	(*timestamp.Timestamp)(nil),          // 7: google.protobuf.Timestamp
}
var file_secret_proto_depIdxs = []int32{
	0, // 0: grafeas.v1beta1.secret.SecretOccurrence.kind:type_name -> grafeas.v1beta1.secret.SecretKind
	4, // 1: grafeas.v1beta1.secret.SecretOccurrence.locations:type_name -> grafeas.v1beta1.secret.SecretLocation
	5, // 2: grafeas.v1beta1.secret.SecretOccurrence.statuses:type_name -> grafeas.v1beta1.secret.SecretStatus
	6, // 3: grafeas.v1beta1.secret.SecretLocation.file_location:type_name -> grafeas.v1beta1.FileLocation
	1, // 4: grafeas.v1beta1.secret.SecretStatus.status:type_name -> grafeas.v1beta1.secret.SecretStatus.Status
	7, // 5: grafeas.v1beta1.secret.SecretStatus.update_time:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_secret_proto_init() }
func file_secret_proto_init() {
	if File_secret_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_secret_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_secret_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretOccurrence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_secret_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_secret_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_secret_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*SecretLocation_FileLocation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_secret_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_secret_proto_goTypes,
		DependencyIndexes: file_secret_proto_depIdxs,
		EnumInfos:         file_secret_proto_enumTypes,
		MessageInfos:      file_secret_proto_msgTypes,
	}.Build()
	File_secret_proto = out.File
	file_secret_proto_rawDesc = nil
	file_secret_proto_goTypes = nil
	file_secret_proto_depIdxs = nil
}
